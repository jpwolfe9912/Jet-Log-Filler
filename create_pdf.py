from pdf_processing import ProcessPdf

'''
    replace all the constants (the one in caps) with your own lists
'''

'''
    Data Object contains key (keys which are in pdf) and value (actual value) pair
    DATA_OBJECT = {
        'fname': 'Peter', 
        'lname': 'Parker',
        'sex': 'male',
        'mobile': '8888888888'
    }
'''
DATA_OBJECT = {
    "other": "string",
    "route_to_1": "string",
    "route_to_2": "string",
    "route_to_3": "string",
    "route_to_4": "string",
    "route_to_5": "string",
    "route_to_6": "string",
    "route_to_7": "string",
    "route_to_8": "string",
    "route_to_9": "string",
    "route_to_10": "string",
    "route_to_11": "string",
    "route_to_alt_1": "string",
    "route_to_alt_2": "string",
    "route_to_alt_3": "string",
    "route_to_alt_4": "string",
    "route_to_alt_5": "string",
    "dep_aerodrome": "string",
    "dep_elev": "string",
    "dep_atis_id": "string",
    "dep_atis_freq": "string",
    "dest_aerodrome": "string",
    "dest_elev": "string",
    "alt_dest": "string",
    "alt_elev": "string",
    "chan_id_1": "string",
    "chan_freq_1": "string",
    "chan_id_2": "string",
    "chan_freq_2": "string",
    "chan_id_3": "string",
    "chan_freq_3": "string",
    "chan_id_4": "string",
    "chan_freq_4": "string",
    "chan_id_5": "string",
    "chan_freq_5": "string",
    "chan_id_6": "string",
    "chan_freq_6": "string",
    "chan_id_7": "string",
    "chan_freq_7": "string",
    "chan_id_8": "string",
    "chan_freq_8": "string",
    "chan_id_9": "string",
    "chan_freq_9": "string",
    "chan_id_10": "string",
    "chan_freq_10": "string",
    "chan_id_11": "string",
    "chan_freq_11": "string",
    "chan_id_alt_1": "string",
    "chan_freq_alt_1": "string",
    "chan_id_alt_2": "string",
    "chan_freq_alt_2": "string",
    "chan_id_alt_3": "string",
    "chan_freq_alt_3": "string",
    "chan_id_alt_4": "string",
    "chan_freq_alt_4": "string",
    "chan_id_alt_5": "string",
    "chan_freq_alt_5": "string",
    "course_1": "string",
    "course_2": "string",
    "course_3": "string",
    "course_4": "string",
    "course_5": "string",
    "course_6": "string",
    "course_7": "string",
    "course_8": "string",
    "course_9": "string",
    "course_10": "string",
    "course_11": "string",
    "course_alt_1": "string",
    "course_alt_2": "string",
    "course_alt_3": "string",
    "course_alt_4": "string",
    "course_alt_5": "string",
    "dep_clearance_id": "string",
    "dep_clearance_freq": "string",
    "time_off": "string",
    "dep_app_cont_id": "string",
    "dep_app_cont_freq": "string",
    "dist_1": "string",
    "dist_2": "string",
    "dist_3": "string",
    "dist_4": "string",
    "dist_5": "string",
    "dist_6": "string",
    "dist_7": "string",
    "dist_8": "string",
    "dist_9": "string",
    "dist_10": "string",
    "dist_11": "string",
    "dist_total": "string",
    "alt_route": "string",
    "alt_app_cont_id": "string",
    "alt_app_cont_freq": "string",
    "dist_alt_1": "string",
    "dist_alt_2": "string",
    "dist_alt_3": "string",
    "dist_alt_4": "string",
    "dist_alt_5": "string",
    "ete_1": "string",
    "ete_2": "string",
    "ete_3": "string",
    "ete_4": "string",
    "ete_5": "string",
    "ete_6": "string",
    "ete_7": "string",
    "ete_8": "string",
    "ete_9": "string",
    "ete_10": "string",
    "ete_11": "string",
    "ete_total": "string",
    "ete_alt_1": "string",
    "ete_alt_2": "string",
    "ete_alt_3": "string",
    "ete_alt_4": "string",
    "ete_alt_5": "string",
    "eta_1": "string",
    "ata_1": "string",
    "eta_2": "string",
    "ata_2": "string",
    "eta_3": "string",
    "ata_3": "string",
    "eta_4": "string",
    "ata_4": "string",
    "eta_5": "string",
    "ata_5": "string",
    "eta_6": "string",
    "ata_6": "string",
    "eta_7": "string",
    "ata_7": "string",
    "eta_8": "string",
    "ata_8": "string",
    "eta_9": "string",
    "ata_9": "string",
    "eta_10": "string",
    "ata_10": "string",
    "eta_11": "string",
    "ata_11": "string",
    "eta_total": "string",
    "ata_total": "string",
    "eta_alt_1": "string",
    "ata_alt_1": "string",
    "eta_alt_2": "string",
    "ata_alt_2": "string",
    "eta_alt_3": "string",
    "ata_alt_3": "string",
    "eta_alt_4": "string",
    "ata_alt_4": "string",
    "eta_alt_5": "string",
    "ata_alt_5": "string",
    "dep_gnd_cont_id": "string",
    "dep_gnd_cont_freq": "string",
    "tas": "string",
    "mach": "string",
    "dest_tower_id": "string",
    "dest_tower_freq": "string",
    "leg_fuel_1": "string",
    "leg_fuel_2": "string",
    "leg_fuel_3": "string",
    "leg_fuel_4": "string",
    "leg_fuel_5": "string",
    "leg_fuel_6": "string",
    "leg_fuel_7": "string",
    "leg_fuel_8": "string",
    "leg_fuel_9": "string",
    "leg_fuel_10": "string",
    "leg_fuel_11": "string",
    "leg_fuel_total": "string",
    "alt_altitude": "string",
    "alt_tower_id": "string",
    "alt_tower_freq": "string",
    "leg_fuel_alt_1": "string",
    "leg_fuel_alt_2": "string",
    "leg_fuel_alt_3": "string",
    "leg_fuel_alt_4": "string",
    "leg_fuel_alt_5": "string",
    "efr_1": "string",
    "afr_1": "string",
    "efr_2": "string",
    "afr_2": "string",
    "efr_3": "string",
    "afr_3": "string",
    "efr_4": "string",
    "afr_4": "string",
    "efr_5": "string",
    "afr_5": "string",
    "efr_6": "string",
    "afr_6": "string",
    "efr_7": "string",
    "afr_7": "string",
    "efr_8": "string",
    "afr_8": "string",
    "efr_9": "string",
    "afr_9": "string",
    "efr_10": "string",
    "afr_10": "string",
    "efr_11": "string",
    "afr_11": "string",
    "efr_total": "string",
    "afr_total": "string",
    "efr_alt_1": "string",
    "afr_alt_1": "string",
    "efr_alt_2": "string",
    "afr_alt_2": "string",
    "efr_alt_3": "string",
    "afr_alt_3": "string",
    "efr_alt_4": "string",
    "afr_alt_4": "string",
    "efr_alt_5": "string",
    "afr_alt_5": "string",
    "cont_fuel": "string",
    "cont_fuel_1": "string",
    "cont_fuel_2": "string",
    "cont_fuel_3": "string",
    "cont_fuel_4": "string",
    "cont_fuel_5": "string",
    "cont_fuel_6": "string",
    "cont_fuel_7": "string",
    "cont_fuel_8": "string",
    "cont_fuel_9": "string",
    "cont_fuel_10": "string",
    "cont_fuel_11": "string",
    "alt_fuel": "string",
    "cont_fuel_alt_1": "string",
    "cont_fuel_alt_2": "string",
    "cont_fuel_alt_3": "string",
    "cont_fuel_alt_4": "string",
    "cont_fuel_alt_5": "string",
    "dep_tower_id": "string",
    "dep_tower_freq": "string",
    "lbs_ph": "string",
    "lbs_pm": "string",
    "dest_gnd_cont_id": "string",
    "dest_gnd_cont_freq": "string",
    "notes_1": "string",
    "notes_2": "string",
    "notes_3": "string",
    "notes_4": "string",
    "notes_5": "string",
    "notes_6": "string",
    "notes_7": "string",
    "notes_8": "string",
    "notes_9": "string",
    "notes_10": "string",
    "notes_11": "string",
    "notes_12": "string",
    "alt_gnd_cont_id": "string",
    "alt_gnd_cont_freq": "string",
    "notes_alt_1": "string",
    "notes_alt_2": "string",
    "notes_alt_3": "string",
    "notes_alt_4": "string",
    "notes_alt_5": "string",
    "alt_time": "string",
    "route_dest_iaf_fuel": "string",
    "route_alt_iaf_fuel": "string",
    "approaches_fuel": "string",
    "in_air_used_fuel": "string",
    "reserve_fuel": "string",
    "rwy_length_dest": "string",
    "lighting_dest": "string",
    "fuel_dest": "string",
    "ils_dest": "string",
    "loc_dest": "string",
    "asr_dest": "string",
    "par_mins_dest": "string",
    "tac_mins_dest": "string",
    "arr_gear_dest": "string",
    "pubs_dest": "string",
    "notams_dest": "string",
    "fuel_packet_dest_1": "string",
    "fuel_packet_dest_2": "string",
    "fuel_packet_dest_3": "string",
    "fuel_packet_dest_4": "string",
    "etc_dest": "string",
    "last_cruise_req_fuel": "string",
    "map_to_iaf_req_fuel": "string",
    "bingo_req_fuel": "string",
    "last_cruise_appr_fuel": "string",
    "map_to_iaf_appr_fuel": "string",
    "rwy_length_alt": "string",
    "lighting_alt": "string",
    "fuel_alt": "string",
    "ils_alt": "string",
    "loc_alt": "string",
    "asr_alt": "string",
    "par_mins_alt": "string",
    "tac_mins_alt": "string",
    "arr_gear_alt": "string",
    "pubs_alt": "string",
    "notams_alt": "string",
    "fuel_packet_alt_1": "string",
    "fuel_packet_alt_2": "string",
    "fuel_packet_alt_3": "string",
    "fuel_packet_alt_4": "string",
    "etc_alt": "string",
    "last_cruise_res_fuel": "string",
    "map_to_iaf_fuel": "string",
    "add_res_fuel": "string",
    "stto_fuel": "string",
    "total_req_fuel": "string",
    "total_aboard_fuel": "string",
    "spare_fuel": "string",
    "last_cruise_total_fuel": "string",
    "map_to_iaf_total_fuel": "string",
    "bingo_total": "string",
    "waypoint_1": "string",
    "waypoint_2": "string",
    "waypoint_3": "string",
    "waypoint_4": "string",
    "waypoint_5": "string",
    "waypoint_6": "string",
    "waypoint_7": "string",
    "waypoint_8": "string",
    "waypoint_9": "string",
    "waypoint_10": "string",
    "waypoint_11": "string",
    "waypoint_12": "string",
    "waypoint_13": "string",
    "waypoint_14": "string",
    "waypoint_15": "string",
    "waypoint_16": "string",
    "clearance_cleared_to": "string",
    "clearance_altitude": "string",
    "clearance_freq": "string",
    "clearance_transp": "string",
    "clearance_route": "string"
}

data = DATA_OBJECT

output_file = 'final_pdf.pdf'

temp_files = []

pdf = ProcessPdf('pdf_temp/', output_file)

''' 
    PDF_TEMPLATE_PATH = path/to/your.pdf
'''
data_pdf = pdf.add_data_to_pdf("Blank Jet Log Fillable - Copy_repaired.pdf", data)

temp_files.append(data_pdf)

''' 
IMAGES = {'passport': 'path/to/passport_image.jpg', 'address_proof': 'path/to/address_proof.jpg'}
POSITIONS = [
    {'page': 1, 'x0': 100, 'y0': 100, 'x1': 200, 'y1': 200, 'image': 'passport'},
    {'page': 2, 'x0': 100, 'y0': 100, 'x1': 200, 'y1': 200, 'image': 'address'}
]
'''
# data_image_pdf = pdf.add_image_to_pdf(data_pdf, IMAGES, POSITIONS)

# temp_files.append(data_pdf)

# compressed_pdf = pdf.compress_pdf(data_pdf)

# pdf.delete_temp_files(temp_files)
